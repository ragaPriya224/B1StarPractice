diff environments 
testing importance 
------------------------------------------
Testing Concepts
Stages of Testing

Manual Testing and Automation Testing

Selenium as automation tool



Software testing is the process of executing a program with the aim of finding the error. 
To make our software perform well it should be error-free. 
If testing is done successfully it will remove all the errors from the software. 

-------------

STLC

Requirement Analysis
Test planning
Test cases design
environment setup
test execution-> once test cases executed, if any defect detected, tester should raise the defects(bugs/issues). Once raised, developer should start working on the bugs and they have to fix the bugs. Once bugs are fixed, tester have to make sure, tat bugs are fixed properly..

After all the raised bugs are fixed, tester should do regression testing 
test closure

There are seven principles in software testing: 
 
Testing shows the presence of defects
Exhaustive testing is not possible
Early testing
Defect clustering
Pesticide paradox
Testing is context-dependent
Absence of errors fallacy


1.Testing shows the presence of defects
----------------------------------------
The goal of software testing is to make the software fail.
Software testing reduces the presence of defects.
Software testing talks about the presence of defects and doesnâ€™t talk about the absence of defects.
Software testing can ensure that defects are present but it can not prove that software is defect-free.
Even multiple testing can never ensure that software is 100% bug-free. 
Testing can reduce the number of defects but not remove all defects.

2. Exhaustive testing is not possible
----------------------------------------
It is the process of testing the functionality of the software in all possible inputs (valid or invalid) and pre-conditions is known as exhaustive testing. 
Exhaustive testing is impossible means the software can never test at every test case. 
It can test only some test cases and assume that the software is correct and it will produce the correct output in every test case.
If the software will test every test case then it will take more cost, effort, etc., which is impractical.


3. Early Testing
------------------
To find the defect in the software, early test activity shall be started. 
The defect detected in the early phases of SDLC will be very less expensive.
 For better performance of software, software testing will start at the initial phase i.e. testing will perform at the requirement analysis phase.
 
 4.Defect clustering:
 --------------------
 In a project, a small number of modules can contain most of the defects. 
Pareto Principle to software testing state that 80% of software defect comes from 20% of modules.


5. Pesticide paradox
----------------------
Repeating the same test cases, again and again, will not find new bugs. 
So it is necessary to review the test cases and add or update test cases to find new bugs.

6. Testing is context-dependent
-------------------------------
The testing approach depends on the context of the software developed. 
Different types of software need to perform different types of testing. 
For example, The testing of the e-commerce site is different from the testing of the Android application.

7.Absence of errors fallacy
---------------------------
If a built software is 99% bug-free but it does not follow the user requirement then it is unusable. 
It is not only necessary that software is 99% bug-free but it is also mandatory to fulfill all the customer requirements.










